<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACOgHY0i4B0RIuAdESLgHREh3xxRId8cUSHfHFEg3xxRIN8cUSDeG1Eg3htRIN4bUSDeG1Eg3htRIN4
        bUSDeG1Eg3htRIJ4bjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAj4Z5O4+EeP+Og3f/jYJ2/4yBdf+LgXX/ioB0/4l/c/+IfnL/h4Ks/4eCq/+Fe3D/hHpv/4N5
        bv+CeG3/gnht/4J4bf+CeG3/gnht/4J5azkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACTiXxQkod7/5GGev+QhXn/j4V4/46Ed/+Og3f/jYJ2/5mPhf9JSdj/SkrY/5aM
        gv+IfXL/h3xx/4Z8cP+Fe2//hHpv/4N5bv+CeG3/gXduTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANBo
        X47RaF+qz2Vcqs5lXKrOYlmqzmBXqsBnXbeWin7/lYp9/5SJfP+TiHv/kod6/5GGef+QhXn/1tLN/2Nj
        3v9kZN7/08/L/4uAdf+KgHT/iX9z/4h+cv+HfXH/hnxx/4V7cP+OWie2jVMXqoxTF6qMUxeqjFMXqoxT
        F6qMUxaO1XBn/tRuZf/TbGP/0Wph/9BoX//QZl3/vnGD/4yBlv+YjX//l4x//5aLfv+Vin3/lIl8/5mP
        gv/7+/r/fX3k/35+5P/7+vr/lIp+/42Dd/+Mgnb/i4F1/4uAdP+Kf3P/f3WM/5JlT/+RVBX/kFQV/45T
        Ff+NUxb/jFIW/4xSFv7Zd2/e2HZt/9dza//VcWj/1G9m/9NtZP++q9X/RkXO/6SShf+aj4H/mY6B/5iN
        gP+XjH//urOq//7+//+Njuf/jY7n//7+//+2r6b/kYZ5/5CFef+PhHj/joN3/5SFdv9DQs7/s6jG/5VX
        E/+UVhT/klUU/5FVFP+QVBX/j1MV3N5+dmPcfXX/2nty/9l5cP/Yd27/3ouE/9zc+P9TU9v/793b/6yI
        e/+dkYP/nJCD/5uPgv/Ry8X/v+Tz/z+u2/8/rtv/wOTz/83Iwv+UiXz/k4h7/5KHe/+Ue17/5drO/1JS
        2v/d3Pf/qnQ5/5hYEv+WVxP/lVcT/5RWE/+SVRVgAAAAAN+FfHnegnr83YB4/9x+dv/su7b/2+f4/4aj
        5//5+/3/3IZ+/8Z7cf+uiXz/npGE/53F0v8kotb/IaHW/yGh1v8kotb/nsTR/5eLff+aflz/n2ou/650
        Mf/5+/3/hqPn/9vn+P/LqYL/nFoR/5pZEv+ZWRL7l1kRdgAAAAAAAAAAAAAAAOOIgi3giYCm4IZ98cTF
        zv8up9j/IaHW/1K23//boJv/2Xlw3Nd3b4G5hHsdU7jh7CGt5/8htO//IbPv/yGt5v9Tt+HsnntPHadf
        DoOnYA7dt41X/1G13/8hodb/LqfY/7K6rv+gXBDxn1wQpJpZEisAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/qqoDWLnh6CGq4/8href/Iajf/4PB35gAAAAAAAAAACC18W4ktfD+Jbbx/ye38v8nt/L/Jbbx/yS0
        8P4hs/FsAAAAAAAAAAB+v9eYIajg/yGt5/8hq+P/V7jf6KpVAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB+z71EmtfD9J7fy/yi48v8mtvH/LLbw6h2x6xohs/FsJrfx/yy68/8wvPT/Mr31/zK9
        9f8wvPT/LLrz/ya38f8gs/BoHLPsGyq27+smtvH/KLjy/ye38v8mtfD9ILPvUAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAisvE1J7fy+DC89P81vvb/Nr/2/zS+9f8tuvP/I7by0ya38vcuu/T/Nb72/zrB
        9/88wvj/PML4/zrB9/81vvb/Lrv0/ye38/UltvLVLbrz/zS+9f82v/b/Nb72/zC89P8nt/L3I7TwMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAM5nMBSWz7K4xvfX/O8L3/0DE+f9Cxfn/P8T5/znA9/8ntO3/Lbrz/za/
        9v89wvj/QcX5/0TG+v9Exvr/QcX5/z3C+P82v/b/Lbrz/yez7f85wPf/P8T5/0LF+f9AxPn/O8L3/zG9
        9f8ksuysM5nMBQAAAAAAAAAAAAAAAAAAAAAkp99AJLHo3TnB9/9Dxfr/Ssn8/0zL/f9IyPv/O7/1/xqi
        2v8yvfX/O8L3/0LF+v9IyPv/S8r9/0vK/f9IyPv/QsX6/zvC9/8yvfX/GqLa/zvA9f9IyPv/TMv9/0rJ
        /P9Dxfr/OcH3/ySx6N0kp99AAAAAAAAAAAAAAAAAAAAAACSt5BwlnuDWPML4/0fI+/9PzP7/Us7+/03L
        /f85vvL/G6Hb/zW+9v8+w/j/Rcf7/03L/f9Qzf7/UM3+/03L/f9Fx/v/PsP4/zW+9v8botr/Or7z/03L
        /f9Szv7/T8z+/0fI+/88wvj/Jp/h1Caq4xsAAAAAAAAAAAAAAAAAAAAAHFXGCR+A0tU7wvf/Rsf7/07M
        /f9Qzf7/TMr9/0HE+v8nnuD/Nb/2/z/D+P9GyPv/Tsv9/1LO/v9Szv7/Tsv9/0bI+/8/w/j/Nb/2/yec
        3/9BxPr/TMr9/1DN/v9OzP3/Rsf7/zvC9/8feM3TIEC/CAAAAAAAAAAAAAAAAAAAAAATW7w1GWzG5za/
        9v9AxPn/Rsf7/0jI+/9Fx/r/PcP4/x9/0f80vvX/PcP4/0TG+v9Lyvz/T8z9/0/M/f9Lyvz/RMb6/z3D
        +P80vvX/IHXL/z3D+P9Fx/r/SMj7/0bH+/9AxPn/Nr/2/xhfveUURq8zAAAAAAAAAAAAAAAAAAAAABZg
        vEUVYL78Kq3s/ze/9v88wvj/PsP4/zvC9/80vvX/F2TB/y2v7P85wff/QMT5/0XH+/9Iyfz/SMn8/0XH
        +/9AxPn/OcH3/yys6/8XVrr/NL71/zvC9/8+w/j/PML4/ze/9v8qq+v/FU60/RVJskkAAAAAAAAAAAAA
        AAAAAAAAFGLEDRZjweoVZMH/F2fC/xVkwf8VZL//FmC+/xZfvv8VXr3/IJDa/zO99f86wff/PsP4/0HE
        +f9BxPn/PsP4/zrB9/8zvfX/IIbW/xVNtP8XasP/FmXB/xVjwP8VYr//FmG//xZVuP8WULbpFE6xDQAA
        AAAAAAAAAAAAAAAAAAAAAAAAGGXEKxdtxd8VZMH/FWfC/xVkwf8VYr//FV6+/xRevfsWZcL+KbDu/y2x
        7v8ih9X/HXfL/x14zP8mkdv/MLr0/yiu7P8WVbn+FU60+BVkwf8VZsH/FWXB/xVjwP8VYL7/FVq79RVQ
        tTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWqAxVkwdYVZMH/FWPA/xVhv/8VX73/FWG/rhVi
        v/8WZsH/FWTA/xVmwf8VZcH/FWPA/xVhv/8VX73/FVe4/xVPtf8WTbSMFWXChhVkv/8VZMD/FWK//xVf
        vv8UXL28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhgvyAUX74zFF++MxRf
        vjMUYsQaFWfBnBViv/8VZMD/FWbB/xVlwf8VZMD/FWG//xVfvv8VWLr/FVC1whpNswoAAAAAEGC/EBRh
        vTIUX74zFF++MxNduykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFWTAPRVjwPcVZMH/FWTA/xVjwP8VYb//FV++/xVdvfIAZswFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAhNgv1AUYr59Fl6+ghZdvHYUXbxYFVu8VAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////+AAB//gAAfwAAAAAAAAAAAAAAAIAA
        AAHAAAAD4AgQB/g4HB/4MAwf8AAAD+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfwAAAP+AAAD//g
        B///+A////9///////////////////////8=
</value>
  </data>
</root>